AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to deploy an EC2 instance with Docker and WordPress container

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t3.micro
      - t3.small
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName
    Default:mykey1
    ConstraintDescription: Must be the name of an existing EC2 KeyPair
  VpcId:
    Description: VPC ID where the instance will be deployed
    Type: AWS::EC2::VPC::Id
    Default: vpc-0e5a8d9947f4b7ddb
  SubnetId:
    Description: Subnet ID for the EC2 instance
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0027b0ef05a563667
  LatestAmiId:
    Description: Latest Amazon Linux 2 AMI
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      ImageId: !Ref LatestAmiId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update the system
          yum update -y
          
          # Install Docker
          amazon-linux-extras install docker -y
          systemctl enable docker
          systemctl start docker
          
          # Add ec2-user to docker group
          usermod -a -G docker ec2-user
          
          # Pull and run WordPress container
          docker run -d -p 80:80 \
            --name wordpress \
            wordpress:latest
      Tags:
        - Key: Name
          Value: WordPress-EC2

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: WordPress-SecurityGroup

Outputs:
  InstancePublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
  WordPressURL:
    Description: URL to access WordPress
    Value: !Sub http://${EC2Instance.PublicIp}
